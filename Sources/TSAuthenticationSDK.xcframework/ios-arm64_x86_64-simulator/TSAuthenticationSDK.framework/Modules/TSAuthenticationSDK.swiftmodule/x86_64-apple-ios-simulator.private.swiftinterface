// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
// swift-module-flags: -target x86_64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name TSAuthenticationSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AuthenticationServices
import Foundation
import Swift
import SystemConfiguration
@_exported import TSAuthenticationSDK
import TSCoreSDK
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public typealias TSAuthenticationCompletion = ((Swift.Result<TSAuthenticationSDK.AuthenticationResult, TSAuthenticationSDK.TSAuthenticationError>) -> ())?
public typealias TSRegistrationCompletion = ((Swift.Result<TSAuthenticationSDK.RegistrationResult, TSAuthenticationSDK.TSAuthenticationError>) -> ())?
public enum TSPasscodeError : Swift.String {
  case unknown
  case canceled
  case invalidResponse
  case notHandled
  case failed
  case notInteractive
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum TSAuthenticationError : Swift.Error, Swift.Equatable {
  case notInitialized
  case userNotFound
  case requestIsRunning
  case registrationFailed
  case authenticationFailed
  case invalidWebAuthnSession
  case genericServerError
  case networkError
  case passkeyError(TSAuthenticationSDK.TSPasscodeError)
  case unknown
  public static func == (a: TSAuthenticationSDK.TSAuthenticationError, b: TSAuthenticationSDK.TSAuthenticationError) -> Swift.Bool
}
@objc final public class TSConfiguration : ObjectiveC.NSObject {
  final public var domain: Swift.String {
    get
  }
  public init(domain: Swift.String)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class TSAuthentication : ObjectiveC.NSObject {
  public static let shared: TSAuthenticationSDK.TSAuthentication
  final public func initialize(baseUrl: Swift.String, clientId: Swift.String, configuration: TSAuthenticationSDK.TSConfiguration? = nil)
  final public func register(username: Swift.String, displayName: Swift.String?, completion: TSAuthenticationSDK.TSRegistrationCompletion)
  final public func authenticate(username: Swift.String, completion: TSAuthenticationSDK.TSAuthenticationCompletion = nil)
  final public func signTransaction(username: Swift.String, completion: TSAuthenticationSDK.TSAuthenticationCompletion = nil)
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class RegistrationResult {
  final public var result: Swift.String {
    get
  }
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class AuthenticationResult {
  final public var result: Swift.String {
    get
  }
  @objc deinit
}
extension TSAuthenticationSDK.TSAuthentication {
  final public var version: Swift.String? {
    get
  }
  final public var buildNumber: Swift.String? {
    get
  }
}
extension TSAuthenticationSDK.TSPasscodeError : Swift.Equatable {}
extension TSAuthenticationSDK.TSPasscodeError : Swift.Hashable {}
extension TSAuthenticationSDK.TSPasscodeError : Swift.RawRepresentable {}
